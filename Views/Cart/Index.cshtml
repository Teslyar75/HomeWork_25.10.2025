@{
    ViewData["Title"] = "Корзина покупок";
    var cartItems = ViewData["CartItems"] as IEnumerable<ASP_421.Data.Entities.CartItem> ?? Enumerable.Empty<ASP_421.Data.Entities.CartItem>();
    var totalAmount = ViewData["TotalAmount"] as decimal? ?? 0m;
    var itemsCount = ViewData["ItemsCount"] as int? ?? 0;
}

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a asp-controller="Shop" asp-action="Index">Головна</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Корзина покупок</li>
                </ol>
            </nav>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <h1 class="mb-4">
                <i class="bi bi-cart3"></i> Корзина покупок
                @if (itemsCount > 0)
                {
                    <span class="badge bg-primary ms-2">@itemsCount товарів</span>
                }
            </h1>
        </div>
    </div>

    @if (cartItems != null && cartItems.Any())
    {
        <div class="row">
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">Товари в корзині</h5>
                    </div>
                    <div class="card-body p-0">
                        <div class="table-responsive">
                            <table class="table table-hover mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th>Товар</th>
                                        <th class="text-center">Кількість</th>
                                        <th class="text-end">Ціна</th>
                                        <th class="text-end">Сума</th>
                                        <th class="text-center">Дії</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in cartItems)
                                    {
                                        <tr data-product-id="@item.ProductId">
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    @if (!string.IsNullOrEmpty(item.Product.ImageUrl))
                                                    {
                                                        <img src="/Storage/Item/@item.Product.ImageUrl" 
                                                             class="me-3" 
                                                             style="width: 60px; height: 60px; object-fit: cover; border-radius: 8px;" 
                                                             alt="@item.Product.Name">
                                                    }
                                                    else
                                                    {
                                                        <div class="me-3 bg-light d-flex align-items-center justify-content-center" 
                                                             style="width: 60px; height: 60px; border-radius: 8px;">
                                                            <i class="bi bi-image text-muted"></i>
                                                        </div>
                                                    }
                                                    <div>
                                                        <h6 class="mb-1">@item.Product.Name</h6>
                                                        @if (!string.IsNullOrEmpty(item.Product.Description))
                                                        {
                                                            <small class="text-muted">@item.Product.Description</small>
                                                        }
                                                        <br>
                                                        <small class="text-muted">
                                                            <i class="bi bi-tag"></i> @item.Product.Group.Name
                                                        </small>
                                                    </div>
                                                </div>
                                            </td>
                                            <td class="text-center">
                                                <div class="input-group input-group-sm" style="width: 120px;">
                                                    <button class="btn btn-outline-secondary" type="button" 
                                                            onclick="decreaseQuantity('@item.ProductId.ToString()', this)">
                                                        <i class="bi bi-dash"></i>
                                                    </button>
                                                    <input type="number" class="form-control text-center" 
                                                           id="quantity-@item.ProductId.ToString()"
                                                           value="@item.Quantity" min="1" max="99"
                                                           onchange="updateQuantity('@item.ProductId.ToString()', parseInt(this.value))">
                                                    <button class="btn btn-outline-secondary" type="button" 
                                                            onclick="increaseQuantity('@item.ProductId.ToString()', this)">
                                                        <i class="bi bi-plus"></i>
                                                    </button>
                                                </div>
                                            </td>
                                            <td class="text-end">
                                                <span class="fw-bold">@item.Product.Price.ToString("C")</span>
                                            </td>
                                            <td class="text-end">
                                                <span class="fw-bold text-primary">@((item.Quantity * item.Product.Price).ToString("C"))</span>
                                            </td>
                                            <td class="text-center">
                                                <button class="btn btn-outline-danger btn-sm" 
                                                        onclick="removeFromCart('@item.ProductId.ToString()')"
                                                        title="Видалити з корзини">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-4">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">Підсумок замовлення</h5>
                    </div>
                    <div class="card-body">
                        <div class="d-flex justify-content-between mb-3">
                            <span>Товарів:</span>
                            <span class="fw-bold">@itemsCount</span>
                        </div>
                        <div class="d-flex justify-content-between mb-3">
                            <span>Загальна сума:</span>
                            <span class="fw-bold text-primary fs-5">@totalAmount.ToString("C")</span>
                        </div>
                        <hr>
                        <div class="d-grid gap-2">
                            <button class="btn btn-success btn-lg" onclick="proceedToCheckout()">
                                <i class="bi bi-credit-card"></i> Оформити замовлення
                            </button>
                            <button class="btn btn-outline-secondary" onclick="clearCart()">
                                <i class="bi bi-trash"></i> Очистити корзину
                            </button>
                            <a asp-controller="Shop" asp-action="Index" class="btn btn-outline-primary">
                                <i class="bi bi-arrow-left"></i> Продовжити покупки
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body text-center py-5">
                        <i class="bi bi-cart-x fs-1 text-muted mb-3"></i>
                        <h4>Корзина порожня</h4>
                        <p class="text-muted mb-4">Додайте товари до корзини, щоб продовжити покупки</p>
                        <a asp-controller="Shop" asp-action="Index" class="btn btn-primary">
                            <i class="bi bi-shop"></i> Перейти до магазину
                        </a>
                    </div>
                </div>
            </div>
        </div>
    }
    
    @* Секция рекомендуемых товаров *@
    @{
        var recommendedProducts = ViewData["RecommendedProducts"] as IEnumerable<ASP_421.Data.Entities.Product>;
    }
    
    @if (recommendedProducts != null && recommendedProducts.Any())
    {
        <div class="row mt-5">
            <div class="col-12">
                <div class="card">
                    <div class="card-header bg-light">
                        <h5 class="mb-0">
                            <i class="bi bi-star-fill text-warning"></i>
                            Рекомендовані товари
                        </h5>
                        <small class="text-muted">Можливо, вас зацікавить</small>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            @foreach (var product in recommendedProducts)
                            {
                                <div class="col-lg-3 col-md-4 col-sm-6 mb-4">
                                    <div class="card h-100 shadow-sm">
                                        <div class="position-relative">
                                            @{
                                                string imageSrc;
                                                if (string.IsNullOrEmpty(product.ImageUrl))
                                                {
                                                    imageSrc = "/img/no-image.jpg";
                                                }
                                                else if (product.ImageUrl.StartsWith("/"))
                                                {
                                                    imageSrc = product.ImageUrl;
                                                }
                                                else
                                                {
                                                    imageSrc = "/uploads/" + product.ImageUrl;
                                                }
                                            }
                                            <div class="recommended-product-image">
                                                <a asp-controller="Shop" asp-action="Product" asp-route-slug="@product.Slug" class="d-block">
                                                    <img src="@imageSrc" 
                                                         class="card-img-top product-preview-image" 
                                                         alt="@product.Name"
                                                         style="cursor: pointer;"
                                                         title="Натисніть для перегляду товару">
                                                </a>
                                            </div>
                                            <div class="position-absolute top-0 end-0 m-2">
                                                <span class="badge bg-success">Рекомендовано</span>
                                            </div>
                                        </div>
                                        <div class="card-body d-flex flex-column">
                                            <h6 class="card-title">@product.Name</h6>
                                            <p class="card-text text-muted small flex-grow-1">
                                                @(product.Description?.Length > 80 ? product.Description.Substring(0, 80) + "..." : product.Description)
                                            </p>
                                            <div class="mt-auto">
                                                <div class="d-flex justify-content-between align-items-center mb-2">
                                                    <span class="h5 text-primary mb-0">@product.Price.ToString("C")</span>
                                                    <small class="text-muted">@product.Group.Name</small>
                                                </div>
                                                <div class="d-grid gap-2">
                                                    <a asp-controller="Shop" asp-action="Product" asp-route-slug="@product.Slug" 
                                                       class="btn btn-outline-primary btn-sm">
                                                        <i class="bi bi-eye"></i> Переглянути
                                                    </a>
                                                    @if (Context.User.Identity?.IsAuthenticated ?? false)
                                                    {
                                                        <button class="btn btn-primary btn-sm" onclick="addToCart('@product.Id')">
                                                            <i class="bi bi-cart-plus"></i> Додати в кошик
                                                        </button>
                                                    }
                                                    else
                                                    {
                                                        <button class="btn btn-primary btn-sm" onclick="showLoginRequired()">
                                                            <i class="bi bi-cart-plus"></i> Додати в кошик
                                                        </button>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                        <div class="text-center mt-3">
                            <a asp-controller="Shop" asp-action="Index" class="btn btn-outline-secondary">
                                <i class="bi bi-grid"></i> Переглянути всі товари
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    
    @* Секция просмотренных товаров *@
    @{
        var viewedProducts = ViewData["ViewedProducts"] as IEnumerable<ASP_421.Data.Entities.Product>;
    }
    
    @if (viewedProducts != null && viewedProducts.Any())
    {
        @await Html.PartialAsync("_ViewedProducts", new ASP_421.Models.Shop.ViewedProductsViewModel 
        { 
            Products = viewedProducts, 
            MaxItems = 8,
            Title = "Нещодавно переглянуті товари з усіх груп"
        })
    }
</div>

<script>
function increaseQuantity(productId, button) {
    const input = document.getElementById(`quantity-${productId}`);
    const currentValue = parseInt(input.value) || 1;
    const newValue = currentValue + 1;
    
    console.log('Increasing quantity:', productId, 'from', currentValue, 'to', newValue);
    updateQuantity(productId, newValue);
}

function decreaseQuantity(productId, button) {
    const input = document.getElementById(`quantity-${productId}`);
    const currentValue = parseInt(input.value) || 1;
    const newValue = Math.max(1, currentValue - 1);
    
    console.log('Decreasing quantity:', productId, 'from', currentValue, 'to', newValue);
    updateQuantity(productId, newValue);
}

function updateQuantity(productId, newQuantity) {
    console.log('Updating quantity:', productId, 'to', newQuantity);
    console.log('ProductId type:', typeof productId);
    console.log('NewQuantity type:', typeof newQuantity);
    
    if (newQuantity < 1) {
        removeFromCart(productId);
        return;
    }

    const requestBody = {
        productId: productId, // Это строка, но API ожидает GUID
        quantity: newQuantity
    };
    
    console.log('Request body:', requestBody);
    console.log('ProductId as string:', productId);
    console.log('ProductId length:', productId.length);

    fetch('/api/cart/update', {
        method: 'PUT',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(requestBody)
    })
    .then(response => {
        console.log('Update response status:', response.status);
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        return response.json();
    })
    .then(data => {
        console.log('Update response data:', data);
        if (data.status === 'Ok') {
            showCartNotification('Кількість товару оновлено', 'success');
            
            // Обновляем значение в поле ввода
            const input = document.getElementById(`quantity-${productId}`);
            if (input) {
                input.value = newQuantity;
            }
            
            // Обновляем общую сумму (можно добавить позже)
            // Пока что перезагружаем страницу для обновления всех данных
            setTimeout(() => {
                location.reload();
            }, 500);
        } else {
            showCartNotification(data.errorMessage || 'Помилка оновлення кількості', 'danger');
        }
    })
    .catch(error => {
        console.error('Error updating quantity:', error);
        showCartNotification('Помилка мережі: ' + error.message, 'danger');
    });
}

function removeFromCart(productId) {
    console.log('Removing product from cart:', productId);
    
    if (!confirm('Ви впевнені, що хочете видалити цей товар з корзини?')) {
        return;
    }

    fetch(`/api/cart/${productId}`, {
        method: 'DELETE'
    })
    .then(response => {
        console.log('Remove response status:', response.status);
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        return response.json();
    })
    .then(data => {
        console.log('Remove response data:', data);
        if (data.status === 'Ok') {
            showCartNotification('Товар видалено з корзини', 'success');
            location.reload();
        } else {
            showCartNotification(data.errorMessage || 'Помилка видалення товару', 'danger');
        }
    })
    .catch(error => {
        console.error('Error removing from cart:', error);
        showCartNotification('Помилка мережі: ' + error.message, 'danger');
    });
}

function clearCart() {
    if (!confirm('Ви впевнені, що хочете очистити всю корзину?')) {
        return;
    }

    fetch('/api/cart/clear', {
        method: 'DELETE'
    })
    .then(response => response.json())
    .then(data => {
        if (data.status === 'Ok') {
            showCartNotification('Корзина очищена', 'success');
            location.reload();
        } else {
            showCartNotification(data.errorMessage || 'Помилка очищення корзини', 'danger');
        }
    })
    .catch(error => {
        showCartNotification('Помилка мережі: ' + error.message, 'danger');
    });
}

function proceedToCheckout() {
    showCartNotification('Функція оформлення замовлення буде реалізована пізніше', 'info');
}

// Функция для добавления товара в корзину (для рекомендуемых товаров)
function addToCart(productId) {
    // Проверка авторизации ПЕРЕД отправкой запроса
    const isAuthenticated = @(Context.User.Identity?.IsAuthenticated ?? false ? "true" : "false");
    
    if (!isAuthenticated) {
        showCartNotification('Для додавання товарів до кошика потрібно увійти в систему', 'warning');
        return; // НЕ ОТПРАВЛЯЕМ ЗАПРОС
    }
    
    const button = event.target;
    const originalText = button.innerHTML;
    
    button.innerHTML = '<i class="bi bi-hourglass-split"></i> Додаємо...';
    button.disabled = true;
    
    console.log('Adding product to cart:', productId);
    
    fetch('/api/cart/add', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            productId: productId,
            quantity: 1
        })
    })
    .then(response => {
        console.log('Response status:', response.status);
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        return response.json();
    })
    .then(data => {
        console.log('Response data:', data);
        if (data.status === 'Ok') {
            showCartNotification('Товар додано до корзини!', 'success');
            updateCartCounter();
            
            button.classList.add('btn-success');
            setTimeout(() => {
                button.classList.remove('btn-success');
                button.classList.add('btn-primary');
            }, 1000);
        } else {
            showCartNotification(data.errorMessage || 'Помилка додавання до корзини', 'danger');
        }
    })
    .catch(error => {
        console.error('Error adding to cart:', error);
        showCartNotification('Помилка мережі: ' + error.message, 'danger');
    })
    .finally(() => {
        button.innerHTML = originalText;
        button.disabled = false;
    });
}

// Функция для обновления счетчика корзины
function updateCartCounter() {
    fetch('/api/cart/count')
        .then(response => {
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            return response.json();
        })
        .then(data => {
            console.log('Cart count response:', data);
            if (data.status === 'Ok') {
                const cartCounter = document.getElementById('cart-counter');
                if (cartCounter) {
                    cartCounter.textContent = data.data.count;
                    cartCounter.style.display = data.data.count > 0 ? 'inline' : 'none';
                }
            } else {
                console.warn('Cart count API returned error:', data.errorMessage);
            }
        })
        .catch(error => {
            console.error('Ошибка обновления счетчика корзины:', error);
        });
}

// Функция для показа сообщения о необходимости входа
function showLoginRequired() {
    showCartNotification('Для додавання товарів до кошика потрібно увійти в систему', 'info');
}

function showCartNotification(message, type = 'info') {
    const notification = document.createElement('div');
    notification.className = `alert alert-${type} alert-dismissible fade show position-fixed`;
    notification.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
    
    notification.innerHTML = `
        <i class="bi bi-${type === 'success' ? 'check-circle' : type === 'danger' ? 'exclamation-triangle' : 'info-circle'}"></i>
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    `;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
        if (notification.parentNode) {
            notification.remove();
        }
    }, 3000);
}
</script>
￼
